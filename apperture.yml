version: '3.3'
services:
  backend:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/backend:latest
    networks:
     - net
     - traefik-public
    secrets:
     -
      source: backend.env
      target: /code/.env
    logging:
      driver: json-file
    deploy:
      labels:
        traefik.http.routers.backend-https.service: backend
        traefik.http.routers.backend-docs.rule: Host(`api.apperture.io`) &&
          PathPrefix(`/docs`, `/openapi.json`, `/redoc`)
        traefik.http.routers.backend-http.service: backend
        traefik.http.routers.backend-docs.tls: 'true'
        traefik.http.routers.backend-http.rule: Host(`api.apperture.io`)
        traefik.http.middlewares.docs-auth.basicauth.users: <username>:<aprhashedpassword>
        traefik.http.routers.backend-https.tls.certresolver: le
        traefik.http.routers.backend-http.entrypoints: http
        traefik.http.routers.backend-https.entrypoints: https
        traefik.constraint-label: traefik-public
        traefik.http.routers.backend-docs.entrypoints: https
        traefik.http.routers.backend-docs.tls.certresolver: le
        traefik.http.routers.backend-docs.service: backend-docs
        traefik.http.services.backend.loadbalancer.server.port: '8001'
        traefik.http.services.backend-docs.loadbalancer.server.port: '8001'
        traefik.http.routers.backend-https.tls: 'true'
        traefik.docker.network: traefik-public
        traefik.enable: 'true'
        traefik.http.routers.backend-https.rule: Host(`api.apperture.io`)
        traefik.http.routers.backend-http.middlewares: https-redirect
        traefik.http.routers.backend-docs.middlewares: docs-auth
      placement:
        constraints:
         - node.hostname == worker1
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.5'
          memory: 512M
  data_processor:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/data_processor:latest
    networks:
     - net
    secrets:
     -
      source: data_processor.env
      target: /code/.env
    logging:
      driver: json-file
    deploy:
      replicas: 2
      placement:
        constraints:
         - node.hostname == worker2
      resources:
        reservations:
          cpus: '0.2'
          memory: 256M
        limits:
          cpus: '0.9'
          memory: 1000M
  frontend:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest
    networks:
     - net
     - traefik-public
    secrets:
     -
      source: frontend.env
      target: /code/.env
    logging:
      driver: json-file
    deploy:
      labels:
        traefik.http.routers.frontend-https.rule: Host(`app.apperture.io`)
        traefik.http.routers.frontend-https.entrypoints: https
        traefik.http.routers.frontend-https.tls.certresolver: le
        traefik.http.routers.frontend-http.middlewares: https-redirect
        traefik.constraint-label: traefik-public
        traefik.http.routers.frontend-http.rule: Host(`app.apperture.io`)
        traefik.http.routers.frontend-https.tls: 'true'
        traefik.http.services.frontend.loadbalancer.server.port: '3000'
        traefik.docker.network: traefik-public
        traefik.enable: 'true'
        traefik.http.routers.frontend-http.entrypoints: http
      placement:
        constraints:
         - node.hostname == worker1
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.5'
          memory: 512M
  redis:
    image: bitnami/redis:latest
    environment:
      REDIS_PASSWORD: <redispassword>
    ports:
     - 6379:6379
    volumes:
     - redisdata:/data/db
    networks:
     - net
    logging:
      driver: json-file
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 128M
        limits:
          cpus: '0.5'
          memory: 256M

networks:
  net:
    driver: overlay
  traefik-public:
    external: true

secrets:
  backend.env:
    external: true
  data_processor.env:
    external: true
  frontend.env:
    external: true

volumes:
  redisdata:
    driver: local
