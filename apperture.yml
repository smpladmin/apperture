version: '3.3'
services:
  alertmanager:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/alertmanager:latest
    networks:
     - net
     - swarmpit_net
    secrets:
     -
      source: alertmanager2.env
      target: /code/.env
    logging:
      driver: json-file
    deploy:
      labels:
        swarmpit.service.deployment.autoredeploy: 'true'
      resources:
        reservations:
          cpus: '0.1'
          memory: 50M
        limits:
          cpus: '0.2'
          memory: 100M
  backend:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/backend:latest
    networks:
     - net
     - traefik-public
    secrets:
     -
      source: backend.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-log-group
        awslogs-region: ap-south-1
        awslogs-stream: backend
    deploy:
      labels:
        traefik.http.routers.backend-https.service: backend
        traefik.http.routers.backend-docs.rule: Host(`apiv1.apperture.io`) && PathPrefix(`/docs`,
          `/openapi.json`, `/redoc`)
        traefik.http.routers.backend-http.service: backend
        traefik.http.routers.backend-docs.tls: 'true'
        traefik.http.routers.backend-http.rule: Host(`apiv1.apperture.io`)
        traefik.http.middlewares.docs-auth.basicauth.users: apperture_admin:$$apr1$$Ywq8BlBR$$ZsGmf2ZQji8GVD13SqmgS.
        traefik.http.routers.backend-https.tls.certresolver: le
        traefik.http.routers.backend-http.entrypoints: http
        traefik.http.routers.backend-https.entrypoints: https
        traefik.constraint-label: traefik-public
        traefik.http.routers.backend-docs.entrypoints: https
        traefik.http.routers.backend-docs.tls.certresolver: le
        traefik.http.routers.backend-docs.service: backend-docs
        traefik.http.services.backend.loadbalancer.server.port: '8001'
        traefik.http.services.backend-docs.loadbalancer.server.port: '8001'
        traefik.http.routers.backend-https.tls: 'true'
        traefik.docker.network: traefik-public
        traefik.enable: 'true'
        traefik.http.routers.backend-https.rule: Host(`apiv1.apperture.io`)
        traefik.http.routers.backend-http.middlewares: https-redirect
        traefik.http.routers.backend-docs.middlewares: docs-auth
      update_config:
        delay: 5s
        order: start-first
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M
        limits:
          cpus: '1.0'
          memory: 2048M
  backend2:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/backend:latest
    networks:
     - net
     - traefik-public
    secrets:
     -
      source: backend.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-log-group
        awslogs-region: ap-south-1
        awslogs-stream: backend2
    deploy:
      replicas: 4
      labels:
        traefik.http.routers.backend-https2.service: backend2
        traefik.http.routers.backend-docs2.middlewares: docs-auth2
        traefik.http.routers.backend-https2.tls.certresolver: le
        traefik.http.routers.backend-docs2.tls.certresolver: le
        traefik.http.routers.backend-http2.service: backend2
        traefik.http.routers.backend-https2.tls: 'true'
        traefik.http.routers.backend-docs2.service: backend-docs2
        traefik.http.routers.backend-docs2.tls: 'true'
        traefik.http.routers.backend-http2.entrypoints: http
        traefik.http.routers.backend-https2.entrypoints: https
        traefik.http.services.backend-docs2.loadbalancer.server.port: '8001'
        traefik.http.routers.backend-docs2.rule: Host(`api2.apperture.io`) && PathPrefix(`/docs`,
          `/openapi.json`, `/redoc`)
        traefik.constraint-label: traefik-public
        traefik.http.routers.backend-http2.rule: Host(`api2.apperture.io`)
        traefik.http.middlewares.docs-auth2.basicauth.users: apperture_admin:$$apr1$$Ywq8BlBR$$ZsGmf2ZQji8GVD13SqmgS.
        traefik.docker.network: traefik-public
        traefik.enable: 'true'
        traefik.http.routers.backend-http2.middlewares: https-redirect
        traefik.http.services.backend2.loadbalancer.server.port: '8001'
        traefik.http.routers.backend-docs2.entrypoints: https
        traefik.http.routers.backend-https2.rule: Host(`api2.apperture.io`)
      update_config:
        delay: 5s
        order: start-first
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M
        limits:
          cpus: '1.0'
          memory: 2048M
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
     - 8123:8123
     - 9000:9000
    volumes:
     - /ch/data:/var/lib/clickhouse/
     - /ch/logs:/var/log/clickhouse-server/
     - /ch/config.d:/etc/clickhouse-server/config.d/
     - /ch/backups:/backups
    networks:
     - net
     - traefik-public
    logging:
      driver: json-file
    deploy:
      placement:
        constraints:
         - node.hostname == worker3ch
  data_processor:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/data_processor:latest
    networks:
     - net
    secrets:
     -
      source: data_processor1.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-events-log-group
        awslogs-region: ap-south-1
        awslogs-stream: dataprocessor
    deploy:
      replicas: 2
      placement:
        constraints:
         - node.hostname == worker2
      resources:
        reservations:
          memory: 1000M
        limits:
          memory: 3000M
  events_consumer:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/events_consumer:latest
    networks:
     - net
    secrets:
     -
      source: events_consumer_10000_30min.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-events-log-group
        awslogs-region: ap-south-1
        awslogs-stream: events_consumer
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M
        limits:
          cpus: '1.0'
          memory: 2048M
  events_producer:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/events_producer:latest
    networks:
     - net
     - traefik-public
    secrets:
     -
      source: events_producer1.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-events-log-group
        awslogs-region: ap-south-1
        awslogs-stream: events_producer
    deploy:
      replicas: 2
      labels:
        traefik.http.routers.events_producer-https.tls.certresolver: le
        traefik.http.services.events_producer.loadbalancer.server.port: '8002'
        traefik.http.routers.events_producer-https.service: events_producer
        traefik.http.routers.events_producer-http.entrypoints: http
        swarmpit.service.deployment.autoredeploy: 'true'
        traefik.http.routers.events_producer-http.service: events_producer
        traefik.http.routers.events_producer-http.middlewares: https-redirect
        traefik.constraint-label: traefik-public
        traefik.http.routers.events_producer-https.entrypoints: https
        traefik.http.routers.events_producer-https.tls: 'true'
        traefik.docker.network: traefik-public
        traefik.enable: 'true'
        traefik.http.routers.events_producer-http.rule: Host(`api.apperture.io`)
        traefik.http.routers.events_producer-https.rule: Host(`api.apperture.io`)
      update_config:
        delay: 5s
        order: start-first
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M
        limits:
          cpus: '1.0'
          memory: 2048M
  frontend:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest
    networks:
     - net
     - traefik-public
    secrets:
     -
      source: frontend.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-log-group
        awslogs-region: ap-south-1
        awslogs-stream: frontend
    deploy:
      labels:
        traefik.http.routers.frontend-https.rule: Host(`app.apperture.io`)
        traefik.http.routers.frontend-https.entrypoints: https
        traefik.http.routers.frontend-https.tls.certresolver: le
        traefik.http.routers.frontend-http.middlewares: https-redirect
        traefik.constraint-label: traefik-public
        traefik.http.routers.frontend-http.rule: Host(`app.apperture.io`)
        traefik.http.routers.frontend-https.tls: 'true'
        traefik.http.services.frontend.loadbalancer.server.port: '3000'
        traefik.docker.network: traefik-public
        traefik.enable: 'true'
        traefik.http.routers.frontend-http.entrypoints: http
      update_config:
        delay: 5s
        order: start-first
      placement:
        constraints:
         - node.hostname == worker1
      resources:
        reservations:
          cpus: '0.25'
          memory: 256M
        limits:
          cpus: '0.5'
          memory: 512M
  kafka:
    image: bitnami/kafka:latest
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_BROKER_ID: '1'
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_NODE_ID: '1'
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_ENABLE_KRAFT: 'yes'
      KAFKA_KRAFT_CLUSTER_ID: OTMwNzFhYTY1ODNiNGE5OT
    ports:
     - 9092:9092
    volumes:
     - kafka_data:/bitnami/kafka
    networks:
     - net
    logging:
      driver: json-file
    deploy:
      placement:
        constraints:
         - node.hostname == worker1
  redis:
    image: bitnami/redis:latest
    environment:
      REDIS_PASSWORD: 6a79a8a6664ef4f874027693540ec231
    ports:
     - 6379:6379
    volumes:
     - apperture_redisdata:/bitnami/redis/data
    networks:
     - net
    logging:
      driver: json-file
    deploy:
      placement:
        constraints:
         - node.hostname == worker1
      resources:
        reservations:
          cpus: '0.25'
          memory: 128M
        limits:
          cpus: '0.5'
          memory: 256M
  scheduler:
    image: 212095042672.dkr.ecr.ap-south-1.amazonaws.com/scheduler:latest
    networks:
     - net
    secrets:
     -
      source: scheduler.env
      target: /code/.env
    logging:
      driver: awslogs
      options:
        awslogs-group: apperture-prod-log-group
        awslogs-region: ap-south-1
        awslogs-stream: scheduler
    deploy:
      labels:
        swarmpit.service.deployment.autoredeploy: 'true'
      resources:
        reservations:
          cpus: '0.2'
          memory: 124M
        limits:
          cpus: '0.4'
          memory: 256M
networks:
  net:
    driver: overlay
  swarmpit_net:
    external: true
  traefik-public:
    external: true
volumes:
  apperture_redisdata:
    external: true
  kafka_data:
    external: true
secrets:
  alertmanager2.env:
    external: true
  backend.env:
    external: true
  data_processor1.env:
    external: true
  events_consumer_10000_30min.env:
    external: true
  events_producer1.env:
    external: true
  frontend.env:
    external: true
  scheduler.env:
    external: true
