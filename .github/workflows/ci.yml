name: CI

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set short commit-sha
        id: commit
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: backend
          IMAGE_TAG: latest
          BACKEND_ENV: ${{ secrets.BACKEND_ENV }}
        run: |
          cd backend
          echo "$BACKEND_ENV" > .env
          docker build --target production -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.commit.outputs.sha_short }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
      
      - name: Build and Push Frontend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: frontend
          IMAGE_TAG: latest
          FRONTEND_ENV: ${{ secrets.FRONTEND_ENV }}
        run: |
          cd frontend
          echo "$FRONTEND_ENV" > .env
          docker build --target production -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.commit.outputs.sha_short }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
